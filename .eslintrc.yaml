---
root: true

parser: babel-eslint

parserOptions:
  ecmaVersion: 2018

globals:
  Atomics: readonly
  SharedArrayBuffer: readonly

env:
  jest/globals: true
  commonjs: true
  es6: true
  node: true

plugins: 
  - unused-imports
  - simple-import-sort
  - jest
  - fp
  - modules-newline
  - import

extends: 
  - eslint:recommended
  - plugin:import/errors
  - plugin:jest/all

settings:
  import/resolver:
    babel-module: {}

rules:
  # FP
  fp/no-arguments: error
  fp/no-class: error
  fp/no-delete: error
  fp/no-events: error
  fp/no-get-set: error
  fp/no-let: error
  fp/no-loops: error
  fp/no-mutating-assign: error
  fp/no-mutating-methods: error
  fp/no-mutation:
  - error
  - commonjs: true
  fp/no-nil: error
  fp/no-proxy: error
  fp/no-rest-parameters: error
  fp/no-this: error
  fp/no-throw: error
  fp/no-unused-expression: error
  fp/no-valueof-field: error
  no-var: error

  # Jest
  jest/no-disabled-tests: warn
  jest/no-focused-tests: error
  jest/no-identical-title: error
  jest/prefer-to-have-length: warn
  jest/valid-expect: error 

  # Imports
  modules-newline/import-declaration-newline: error
  modules-newline/export-declaration-newline: error
  simple-import-sort/sort: error
  unused-imports/no-unused-imports: error

  object-curly-newline: 
    - error
    - minProperties: 3
      multiline: true 
  comma-dangle: 
    - error
    - only-multiline
  func-style: 
    - error
    - expression
  arrow-parens: 
    - error
    - as-needed

  comma-spacing: 
    - error
    - before: false
      after: true 

  arrow-body-style: 
    - error
    - as-needed
  space-infix-ops: error
  object-curly-spacing:
  - error
  - always
  curly:
  - error
  - multi
  - consistent
  quote-props:
  - error
  - as-needed
  brace-style:
  - error
  - stroustrup
  linebreak-style:
  - error
  - unix
  quotes:
  - error
  - single
  semi:
  - error
  - never
  eol-last:
  - error
  - always
  padding-line-between-statements:
  - error
  - blankLine: always
    prev: function
    next: function
  - blankLine: always
    prev: "*"
    next: return
  - blankLine: always
    prev:
    - const
    - let
    - var
    next: "*"
  - blankLine: any
    prev:
    - const
    - let
    - var
    next:
    - const
    - let
    - var
  no-multiple-empty-lines:
  - error
  - max: 2
    maxEOF: 1
  indent:
  - error
  - 2

overrides:
- files:
  - "*.test.js"
  - "*.spec.js"
  rules:
    fp/no-unused-expression: off
    fp/no-nil: off 

